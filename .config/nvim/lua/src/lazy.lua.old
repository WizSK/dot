local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
  vim.fn.system({
    "git",
    "clone",
    "--filter=blob:none",
    "https://github.com/folke/lazy.nvim.git",
    "--branch=stable", -- latest stable release
    lazypath,
  })
end
vim.opt.rtp:prepend(lazypath)



require("lazy").setup({
    {
        "catppuccin/nvim", name = "catppuccin",
        -- "folke/tokyonight.nvim",
        -- lazy = false, -- make sure we load this during startup if it is your main colorscheme
        -- priority = 1000, -- make sure to load this before all the other start plugins
        transparent_background = true,
        config = function()
            -- load the colorscheme here
            vim.cmd([[colorscheme catppuccin-mocha]])
        end,
    },

    { -- LSP Configuration & Plugins
    'neovim/nvim-lspconfig',
    dependencies = {
        -- Automatically install LSPs to stdpath for neovim
        'williamboman/mason.nvim',
        'williamboman/mason-lspconfig.nvim',

        -- Useful status updates for LSP
        -- NOTE: `opts = {}` is the same as calling `require('fidget').setup({})`
        { 'j-hui/fidget.nvim', opts = {} },

        -- Additional lua configuration, makes nvim stuff amazing!
        'folke/neodev.nvim',
    },
},
{
    'nvim-lualine/lualine.nvim',
    options = {
        icons_enabled = true,
        theme = 'catppucing',
        component_separators = '|',
        section_separators = '',
    },

},
-- gc, gcc 
-- for commanting and uncommenting ondes
{ 'numToStr/Comment.nvim', opts = {} },
{
    'nvim-treesitter/nvim-treesitter', config =  function()
        vim.cmd([[TSUpdate]])

    end,
},
})
